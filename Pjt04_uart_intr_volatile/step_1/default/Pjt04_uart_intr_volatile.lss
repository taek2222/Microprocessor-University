
Pjt04_uart_intr_volatile.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800200  000002bc  00000350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004a  00800236  00800236  00000386  2**0
                  ALLOC
  3 .stab         00000750  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000e7  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000c8  00000000  00000000  00000bc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007d8  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000038a  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000515  00000000  00000000  000017ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  00001d00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000184  00000000  00000000  00001dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ab  00000000  00000000  00001f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000020f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 96 00 	jmp	0x12c	; 0x12c <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec eb       	ldi	r30, 0xBC	; 188
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 33       	cpi	r26, 0x36	; 54
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	12 e0       	ldi	r17, 0x02	; 2
 112:	a6 e3       	ldi	r26, 0x36	; 54
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a0 38       	cpi	r26, 0x80	; 128
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
 124:	0c 94 5c 01 	jmp	0x2b8	; 0x2b8 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <__vector_27>:
	while(1);
	return 0;
}

ISR(USART0_TX_vect)
{
 12c:	1f 92       	push	r1
 12e:	0f 92       	push	r0
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	0f 92       	push	r0
 134:	0b b6       	in	r0, 0x3b	; 59
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	2f 93       	push	r18
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	ef 93       	push	r30
 142:	ff 93       	push	r31
	char ch = buf[bufi];
 144:	80 91 36 02 	lds	r24, 0x0236
 148:	90 91 37 02 	lds	r25, 0x0237
 14c:	fc 01       	movw	r30, r24
 14e:	e6 5c       	subi	r30, 0xC6	; 198
 150:	fd 4f       	sbci	r31, 0xFD	; 253
 152:	20 81       	ld	r18, Z
	if(!ch) {
 154:	22 23       	and	r18, r18
 156:	39 f4       	brne	.+14     	; 0x166 <__vector_27+0x3a>
		txend = 1; return;
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	90 93 39 02 	sts	0x0239, r25
 160:	80 93 38 02 	sts	0x0238, r24
 164:	0c c0       	rjmp	.+24     	; 0x17e <__vector_27+0x52>
	}
	if (ch == '\n') buf[bufi] = '\r';
 166:	2a 30       	cpi	r18, 0x0A	; 10
 168:	19 f4       	brne	.+6      	; 0x170 <__vector_27+0x44>
 16a:	8d e0       	ldi	r24, 0x0D	; 13
 16c:	80 83       	st	Z, r24
 16e:	05 c0       	rjmp	.+10     	; 0x17a <__vector_27+0x4e>
	else			bufi++;
 170:	01 96       	adiw	r24, 0x01	; 1
 172:	90 93 37 02 	sts	0x0237, r25
 176:	80 93 36 02 	sts	0x0236, r24
	UDR0 = ch;
 17a:	20 93 c6 00 	sts	0x00C6, r18
}
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	9f 91       	pop	r25
 184:	8f 91       	pop	r24
 186:	2f 91       	pop	r18
 188:	0f 90       	pop	r0
 18a:	0b be       	out	0x3b, r0	; 59
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <uart_init>:
#include <util/delay.h>
#include "uart.h"

void uart_init()
{
	UBRR0H = 0x00; UBRR0L = 0x07;
 196:	10 92 c5 00 	sts	0x00C5, r1
 19a:	87 e0       	ldi	r24, 0x07	; 7
 19c:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0A |= (1 << U2X0);
 1a0:	e0 ec       	ldi	r30, 0xC0	; 192
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	82 60       	ori	r24, 0x02	; 2
 1a8:	80 83       	st	Z, r24
	UCSR0B |= (1 << TXEN0);
 1aa:	e1 ec       	ldi	r30, 0xC1	; 193
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	88 60       	ori	r24, 0x08	; 8
 1b2:	80 83       	st	Z, r24
	UCSR0B |= (1 << TXCIE0);
 1b4:	80 81       	ld	r24, Z
 1b6:	80 64       	ori	r24, 0x40	; 64
 1b8:	80 83       	st	Z, r24
}
 1ba:	08 95       	ret

000001bc <uart_putstart>:

char buf[64];
int bufi, txend;

void uart_putstart(char str[])
{
 1bc:	bc 01       	movw	r22, r24
	char ch;
	strcpy(buf, str);	bufi = 0;
 1be:	8a e3       	ldi	r24, 0x3A	; 58
 1c0:	92 e0       	ldi	r25, 0x02	; 2
 1c2:	0e 94 27 01 	call	0x24e	; 0x24e <strcpy>
	ch = buf[bufi++];
 1c6:	20 91 3a 02 	lds	r18, 0x023A
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	90 93 37 02 	sts	0x0237, r25
 1d2:	80 93 36 02 	sts	0x0236, r24
	UDR0 = ch;
 1d6:	20 93 c6 00 	sts	0x00C6, r18
}
 1da:	08 95       	ret

000001dc <main>:
#include <avr/interrupt.h>
#include "uart.h"

int main() {
	int i;
	uart_init();
 1dc:	0e 94 cb 00 	call	0x196	; 0x196 <uart_init>
	sei();
 1e0:	78 94       	sei
	txend = 0;
 1e2:	10 92 39 02 	sts	0x0239, r1
 1e6:	10 92 38 02 	sts	0x0238, r1
 1ea:	ca e0       	ldi	r28, 0x0A	; 10
 1ec:	d0 e0       	ldi	r29, 0x00	; 0

	for(i = 0; i < 10; i++) {
		uart_putstart( "I love you. \n" );
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	92 e0       	ldi	r25, 0x02	; 2
 1f2:	0e 94 de 00 	call	0x1bc	; 0x1bc <uart_putstart>
			while(!txend); txend = 0;
 1f6:	80 91 38 02 	lds	r24, 0x0238
 1fa:	90 91 39 02 	lds	r25, 0x0239
 1fe:	00 97       	sbiw	r24, 0x00	; 0
 200:	29 f1       	breq	.+74     	; 0x24c <main+0x70>
 202:	10 92 39 02 	sts	0x0239, r1
 206:	10 92 38 02 	sts	0x0238, r1
		uart_putstart( "You love me. \n" );
 20a:	8e e0       	ldi	r24, 0x0E	; 14
 20c:	92 e0       	ldi	r25, 0x02	; 2
 20e:	0e 94 de 00 	call	0x1bc	; 0x1bc <uart_putstart>
			while(!txend); txend = 0;
 212:	80 91 38 02 	lds	r24, 0x0238
 216:	90 91 39 02 	lds	r25, 0x0239
 21a:	00 97       	sbiw	r24, 0x00	; 0
 21c:	b1 f0       	breq	.+44     	; 0x24a <main+0x6e>
 21e:	10 92 39 02 	sts	0x0239, r1
 222:	10 92 38 02 	sts	0x0238, r1
		uart_putstart( "He loves her. \n" );
 226:	8d e1       	ldi	r24, 0x1D	; 29
 228:	92 e0       	ldi	r25, 0x02	; 2
 22a:	0e 94 de 00 	call	0x1bc	; 0x1bc <uart_putstart>
			while(!txend);
 22e:	80 91 38 02 	lds	r24, 0x0238
 232:	90 91 39 02 	lds	r25, 0x0239
 236:	00 97       	sbiw	r24, 0x00	; 0
 238:	39 f0       	breq	.+14     	; 0x248 <main+0x6c>
 23a:	21 97       	sbiw	r28, 0x01	; 1
	int i;
	uart_init();
	sei();
	txend = 0;

	for(i = 0; i < 10; i++) {
 23c:	c1 f6       	brne	.-80     	; 0x1ee <main+0x12>
			while(!txend); txend = 0;
		uart_putstart( "He loves her. \n" );
			while(!txend);
	}

	printf( "End !!! \n");
 23e:	8d e2       	ldi	r24, 0x2D	; 45
 240:	92 e0       	ldi	r25, 0x02	; 2
 242:	0e 94 2e 01 	call	0x25c	; 0x25c <puts>
 246:	ff cf       	rjmp	.-2      	; 0x246 <main+0x6a>
 248:	ff cf       	rjmp	.-2      	; 0x248 <main+0x6c>
 24a:	ff cf       	rjmp	.-2      	; 0x24a <main+0x6e>
 24c:	ff cf       	rjmp	.-2      	; 0x24c <main+0x70>

0000024e <strcpy>:
 24e:	fb 01       	movw	r30, r22
 250:	dc 01       	movw	r26, r24
 252:	01 90       	ld	r0, Z+
 254:	0d 92       	st	X+, r0
 256:	00 20       	and	r0, r0
 258:	e1 f7       	brne	.-8      	; 0x252 <strcpy+0x4>
 25a:	08 95       	ret

0000025c <puts>:
 25c:	0f 93       	push	r16
 25e:	1f 93       	push	r17
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	8c 01       	movw	r16, r24
 266:	e0 91 7c 02 	lds	r30, 0x027C
 26a:	f0 91 7d 02 	lds	r31, 0x027D
 26e:	83 81       	ldd	r24, Z+3	; 0x03
 270:	81 ff       	sbrs	r24, 1
 272:	1a c0       	rjmp	.+52     	; 0x2a8 <puts+0x4c>
 274:	c0 e0       	ldi	r28, 0x00	; 0
 276:	d0 e0       	ldi	r29, 0x00	; 0
 278:	05 c0       	rjmp	.+10     	; 0x284 <puts+0x28>
 27a:	19 95       	eicall
 27c:	00 97       	sbiw	r24, 0x00	; 0
 27e:	11 f0       	breq	.+4      	; 0x284 <puts+0x28>
 280:	cf ef       	ldi	r28, 0xFF	; 255
 282:	df ef       	ldi	r29, 0xFF	; 255
 284:	f8 01       	movw	r30, r16
 286:	81 91       	ld	r24, Z+
 288:	8f 01       	movw	r16, r30
 28a:	60 91 7c 02 	lds	r22, 0x027C
 28e:	70 91 7d 02 	lds	r23, 0x027D
 292:	db 01       	movw	r26, r22
 294:	18 96       	adiw	r26, 0x08	; 8
 296:	ed 91       	ld	r30, X+
 298:	fc 91       	ld	r31, X
 29a:	19 97       	sbiw	r26, 0x09	; 9
 29c:	88 23       	and	r24, r24
 29e:	69 f7       	brne	.-38     	; 0x27a <puts+0x1e>
 2a0:	8a e0       	ldi	r24, 0x0A	; 10
 2a2:	19 95       	eicall
 2a4:	00 97       	sbiw	r24, 0x00	; 0
 2a6:	11 f0       	breq	.+4      	; 0x2ac <puts+0x50>
 2a8:	cf ef       	ldi	r28, 0xFF	; 255
 2aa:	df ef       	ldi	r29, 0xFF	; 255
 2ac:	ce 01       	movw	r24, r28
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	1f 91       	pop	r17
 2b4:	0f 91       	pop	r16
 2b6:	08 95       	ret

000002b8 <_exit>:
 2b8:	f8 94       	cli

000002ba <__stop_program>:
 2ba:	ff cf       	rjmp	.-2      	; 0x2ba <__stop_program>
